/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as DevRevBeta from "../../../../../api";
import * as core from "../../../../../core";

export const RevOrgsUpdateRequest: core.serialization.Schema<
    serializers.RevOrgsUpdateRequest.Raw,
    DevRevBeta.RevOrgsUpdateRequest
> = core.serialization.object({
    customSchemaFragments: core.serialization.property(
        "custom_schema_fragments",
        core.serialization.list(core.serialization.string()).optional()
    ),
    description: core.serialization.string().optional(),
    displayName: core.serialization.property("display_name", core.serialization.string().optional()),
    domain: core.serialization.string().optional(),
    environment: core.serialization.lazy(async () => (await import("../../../..")).OrgEnvironment).optional(),
    externalRef: core.serialization.property("external_ref", core.serialization.string().optional()),
    id: core.serialization.string(),
    tier: core.serialization.string().optional(),
});

export declare namespace RevOrgsUpdateRequest {
    interface Raw {
        custom_schema_fragments?: string[] | null;
        description?: string | null;
        display_name?: string | null;
        domain?: string | null;
        environment?: serializers.OrgEnvironment.Raw | null;
        external_ref?: string | null;
        id: string;
        tier?: string | null;
    }
}
