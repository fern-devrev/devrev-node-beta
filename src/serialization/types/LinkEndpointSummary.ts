/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as DevRevBeta from "../../api";
import * as core from "../../core";

export const LinkEndpointSummary: core.serialization.Schema<
    serializers.LinkEndpointSummary.Raw,
    DevRevBeta.LinkEndpointSummary
> = core.serialization
    .union("type", {
        capability: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary),
        conversation: core.serialization.lazyObject(async () => (await import("..")).ConversationSummary),
        enhancement: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary),
        feature: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary),
        issue: core.serialization.lazyObject(async () => (await import("..")).IssueSummary),
        product: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary),
        ticket: core.serialization.lazyObject(async () => (await import("..")).TicketSummary),
    })
    .transform<DevRevBeta.LinkEndpointSummary>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace LinkEndpointSummary {
    type Raw =
        | LinkEndpointSummary.Capability
        | LinkEndpointSummary.Conversation
        | LinkEndpointSummary.Enhancement
        | LinkEndpointSummary.Feature
        | LinkEndpointSummary.Issue
        | LinkEndpointSummary.Product
        | LinkEndpointSummary.Ticket;

    interface Capability extends serializers.PartBaseSummary.Raw {
        type: "capability";
    }

    interface Conversation extends serializers.ConversationSummary.Raw {
        type: "conversation";
    }

    interface Enhancement extends serializers.PartBaseSummary.Raw {
        type: "enhancement";
    }

    interface Feature extends serializers.PartBaseSummary.Raw {
        type: "feature";
    }

    interface Issue extends serializers.IssueSummary.Raw {
        type: "issue";
    }

    interface Product extends serializers.PartBaseSummary.Raw {
        type: "product";
    }

    interface Ticket extends serializers.TicketSummary.Raw {
        type: "ticket";
    }
}
