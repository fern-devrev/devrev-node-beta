/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../core";
import * as serializers from "..";
import * as DevRevBeta from "../../api";

const _Base = core.serialization.object({
    type: core.serialization.lazy(async () => (await import("..")).LinkEndpointType),
});
export const LinkEndpointSummary: core.serialization.Schema<
    serializers.LinkEndpointSummary.Raw,
    DevRevBeta.LinkEndpointSummary
> = core.serialization
    .union("type", {
        capability: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary).extend(_Base),
        conversation: core.serialization.lazyObject(async () => (await import("..")).ConversationSummary).extend(_Base),
        enhancement: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary).extend(_Base),
        feature: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary).extend(_Base),
        issue: core.serialization.lazyObject(async () => (await import("..")).IssueSummary).extend(_Base),
        product: core.serialization.lazyObject(async () => (await import("..")).PartBaseSummary).extend(_Base),
        ticket: core.serialization.lazyObject(async () => (await import("..")).TicketSummary).extend(_Base),
    })
    .transform<DevRevBeta.LinkEndpointSummary>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace LinkEndpointSummary {
    type Raw =
        | LinkEndpointSummary.Capability
        | LinkEndpointSummary.Conversation
        | LinkEndpointSummary.Enhancement
        | LinkEndpointSummary.Feature
        | LinkEndpointSummary.Issue
        | LinkEndpointSummary.Product
        | LinkEndpointSummary.Ticket;

    interface Capability extends _Base, serializers.PartBaseSummary.Raw {
        type: "capability";
    }

    interface Conversation extends _Base, serializers.ConversationSummary.Raw {
        type: "conversation";
    }

    interface Enhancement extends _Base, serializers.PartBaseSummary.Raw {
        type: "enhancement";
    }

    interface Feature extends _Base, serializers.PartBaseSummary.Raw {
        type: "feature";
    }

    interface Issue extends _Base, serializers.IssueSummary.Raw {
        type: "issue";
    }

    interface Product extends _Base, serializers.PartBaseSummary.Raw {
        type: "product";
    }

    interface Ticket extends _Base, serializers.TicketSummary.Raw {
        type: "ticket";
    }

    interface _Base {
        type: serializers.LinkEndpointType.Raw;
    }
}
