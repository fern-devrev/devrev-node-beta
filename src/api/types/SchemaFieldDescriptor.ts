/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as DevRevBeta from "..";

/**
 * Set of field attributes.
 */
export type SchemaFieldDescriptor =
    | DevRevBeta.SchemaFieldDescriptor.Array
    | DevRevBeta.SchemaFieldDescriptor.Bool
    | DevRevBeta.SchemaFieldDescriptor.Composite
    | DevRevBeta.SchemaFieldDescriptor.Double
    | DevRevBeta.SchemaFieldDescriptor.Enum
    | DevRevBeta.SchemaFieldDescriptor.Id
    | DevRevBeta.SchemaFieldDescriptor.Int
    | DevRevBeta.SchemaFieldDescriptor.RichText
    | DevRevBeta.SchemaFieldDescriptor.Text
    | DevRevBeta.SchemaFieldDescriptor.Timestamp
    | DevRevBeta.SchemaFieldDescriptor.Tokens;

export declare namespace SchemaFieldDescriptor {
    interface Array {
        fieldType: "array";
        value: DevRevBeta.SchemaFieldDescriptorArrayType;
    }

    interface Bool extends DevRevBeta.SchemaBoolFieldDescriptor {
        fieldType: "bool";
    }

    interface Composite extends DevRevBeta.SchemaCompositeFieldDescriptor {
        fieldType: "composite";
    }

    interface Double extends DevRevBeta.SchemaDoubleFieldDescriptor {
        fieldType: "double";
    }

    interface Enum extends DevRevBeta.SchemaEnumFieldDescriptor {
        fieldType: "enum";
    }

    interface Id extends DevRevBeta.SchemaIdFieldDescriptor {
        fieldType: "id";
    }

    interface Int extends DevRevBeta.SchemaIntFieldDescriptor {
        fieldType: "int";
    }

    interface RichText extends DevRevBeta.SchemaRichTextFieldDescriptor {
        fieldType: "rich_text";
    }

    interface Text extends DevRevBeta.SchemaTextFieldDescriptor {
        fieldType: "text";
    }

    interface Timestamp extends DevRevBeta.SchemaTimestampFieldDescriptor {
        fieldType: "timestamp";
    }

    interface Tokens extends DevRevBeta.SchemaTokensFieldDescriptor {
        fieldType: "tokens";
    }
}
